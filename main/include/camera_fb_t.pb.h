/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_CAMERA_FB_TYPE_CAMERA_FB_T_PB_H_INCLUDED
#define PB_CAMERA_FB_TYPE_CAMERA_FB_T_PB_H_INCLUDED

#include <pb.h>
#include <pb_common.h>
#include <pb_encode.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CAMERA_FB_TYPE_Camera_fb_t {
    pb_callback_t buf;
    bool has_len;
    int32_t len;
    bool has_height;
    int32_t height;
    bool has_width;
    int32_t width;
    bool has_format;
    int32_t format;
} CAMERA_FB_TYPE_Camera_fb_t;


/* Initializer values for message structs */
#define CAMERA_FB_TYPE_Camera_fb_t_init_default  {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0}
#define CAMERA_FB_TYPE_Camera_fb_t_init_zero     {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CAMERA_FB_TYPE_Camera_fb_t_buf_tag       1
#define CAMERA_FB_TYPE_Camera_fb_t_len_tag       2
#define CAMERA_FB_TYPE_Camera_fb_t_height_tag    3
#define CAMERA_FB_TYPE_Camera_fb_t_width_tag     4
#define CAMERA_FB_TYPE_Camera_fb_t_format_tag    5

/* Struct field encoding specification for nanopb */
#define CAMERA_FB_TYPE_Camera_fb_t_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, INT32,    buf,               1) \
X(a, STATIC,   OPTIONAL, INT32,    len,               2) \
X(a, STATIC,   OPTIONAL, INT32,    height,            3) \
X(a, STATIC,   OPTIONAL, INT32,    width,             4) \
X(a, STATIC,   OPTIONAL, INT32,    format,            5)
#define CAMERA_FB_TYPE_Camera_fb_t_CALLBACK pb_default_field_callback
#define CAMERA_FB_TYPE_Camera_fb_t_DEFAULT NULL

extern const pb_msgdesc_t CAMERA_FB_TYPE_Camera_fb_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CAMERA_FB_TYPE_Camera_fb_t_fields &CAMERA_FB_TYPE_Camera_fb_t_msg

/* Maximum encoded size of messages (where known) */
/* CAMERA_FB_TYPE_Camera_fb_t_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
